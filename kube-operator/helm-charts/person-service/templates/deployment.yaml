apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: person-service
    app.kubernetes.io/component: {{ .Chart.Name | quote }}
    app.kubernetes.io/instance: {{ .Chart.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
  name: person-service
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      deployment: person-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: person-service
        app.kubernetes.io/component: {{ .Chart.Name | quote }}
        app.kubernetes.io/instance: {{ .Chart.Name | quote }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
    spec:
      containers:
        - image: {{ .Values.deployment.image -}}:{{- .Values.deployment.tag}}
          imagePullPolicy: IfNotPresent
          name: person-service
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8778
              protocol: TCP
          resources: {}
          env:
            - name: DB_HOST
              value: postgresql.quarkus.svc.cluster.local
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config
          {{- if .Values.deployment.includeHealthChecks }}
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
        {{- end }}
      restartPolicy: Always
      
